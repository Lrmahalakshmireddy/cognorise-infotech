import java.util.Scanner;
import java.util.Random;

public class Hangman {
    private static final String[] WORDS = {"apple", "banana", "orange", "grape", "pear"};
    private static final int MAX_TRIES = 6;

    public static void main(String[] args) {
        Random random = new Random();
        Scanner scanner = new Scanner(System.in);
        String word = WORDS[random.nextInt(WORDS.length)];
        char[] guessedLetters = new char[word.length()];
        int tries = 0;

        // Initialize guessedLetters array with underscores
        for (int i = 0; i < guessedLetters.length; i++) {
            guessedLetters[i] = '_';
        }

        System.out.println("Welcome to Hangman!");
        System.out.println("Guess the word:");

        while (tries < MAX_TRIES) {
            System.out.println("Current word: " + new String(guessedLetters));
            System.out.print("Enter a letter: ");
            char guess = scanner.next().charAt(0);

            if (contains(word, guess)) {
                updateGuessedLetters(word, guessedLetters, guess);
                if (isWordGuessed(guessedLetters)) {
                    System.out.println("Congratulations! You've guessed the word: " + word);
                    break;
                }
            } else {
                tries++;
                System.out.println("Incorrect guess. Tries left: " + (MAX_TRIES - tries));
                displayHangman(tries);
            }
        }

        if (tries == MAX_TRIES) {
            System.out.println("Sorry, you've run out of tries. The word was: " + word);
        }

        scanner.close();
    }

    private static boolean contains(String word, char guess) {
        return word.indexOf(guess) != -1;
    }

    private static void updateGuessedLetters(String word, char[] guessedLetters, char guess) {
        for (int i = 0; i < word.length(); i++) {
            if (word.charAt(i) == guess) {
                guessedLetters[i] = guess;
            }
        }
    }

    private static boolean isWordGuessed(char[] guessedLetters) {
        for (char c : guessedLetters) {
            if (c == '_') {
                return false;
            }
        }
        return true;
    }

    private static void displayHangman(int tries) {
        String[] hangman = {
            "  +---+\n" +
            "  |   |\n" +
            "      |\n" +
            "      |\n" +
            "      |\n" +
            "      |\n" +
            "=========",
            "  +---+\n" +
            "  |   |\n" +
            "  O   |\n" +
            "      |\n" +
            "      |\n" +
            "      |\n" +
            "=========",
            "  +---+\n" +
            "  |   |\n" +
            "  O   |\n" +
            "  |   |\n" +
            "      |\n" +
            "      |\n" +
            "=========",
            "  +---+\n" +
            "  |   |\n" +
            "  O   |\n" +
            " /|   |\n" +
            "      |\n" +
            "      |\n" +
            "=========",
            "  +---+\n" +
            "  |   |\n" +
            "  O   |\n" +
            " /|\\  |\n" +
            "      |\n" +
            "      |\n" +
            "=========",
            "  +---+\n" +
            "  |   |\n" +
            "  O   |\n" +
            " /|\\  |\n" +
            " /    |\n" +
            "      |\n" +
            "=========",
            "  +---+\n" +
            "  |   |\n" +
            "  O   |\n" +
            " /|\\  |\n" +
            " / \\  |\n" +
            "      |\n" +
            "========="
        };

        System.out.println(hangman[tries]);
    }
}
